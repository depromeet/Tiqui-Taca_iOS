name: Deploy on TestFlight

on:
  push:
    branches: [ master ]

jobs:
  deploy:

    runs-on: macos-latest
    env:
      XC_WORKSPACE: ${{ 'TiquiTaca_iOS.xcworkspace' }}
      XC_SCHEME: ${{ 'TiquiTaca_iOS' }}
      XC_ARCHIVE: ${{ 'TiquiTaca_iOS.xcarchive' }}
      
      # certificate 
      CERT_ENCRYPTION_KEY: ${{ secrets.CERTS_ENCRYPTO_PWD }}
      ENCRYPTED_CERT_FILE_PATH: ${{ '.github/secrets/certification.p12.gpg' }}
      DECRYPTED_CERT_FILE_PATH: ${{ '.github/secrets/certification.p12' }}
      
      # provisioning
      PROVISIONING_ENCRYPTION_KEY: ${{ secrets.PROFILES_ENCRYPTO_PWD }}
      ENCRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/appStore_tiquiTaca.mobileprovision.gpg' }}
      DECRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/appStore_tiquiTaca.mobileprovision' }}
      
      # certification export key
      CERT_EXPORT_KEY: ${{ secrets.CERTS_EXPORT_PWD }}
      
      KEYCHAIN: ${{ 'test.keychain' }}

    steps:
    - name: Select latest Xcode
      run: "sudo xcode-select -s /Applications/Xcode.app"
      
    - name: Checkout ‚¨áÔ∏è
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        submodules: true
      
    - name: Configure Keychain üîë
      run: |
        security create-keychain -p "" "$KEYCHAIN"
        security list-keychains -s "$KEYCHAIN"
        security default-keychain -s "$KEYCHAIN"
        security unlock-keychain -p "" "$KEYCHAIN"
        security set-keychain-settings
        
    - name: Configure Code Signing üìú
      run: |
        gpg -d -o "$DECRYPTED_CERT_FILE_PATH" --pinentry-mode=loopback --passphrase "$CERT_ENCRYPTION_KEY" "$ENCRYPTED_CERT_FILE_PATH"
        gpg -d -o "$DECRYPTED_PROVISION_FILE_PATH" --pinentry-mode=loopback --passphrase "$PROVISIONING_ENCRYPTION_KEY" "$ENCRYPTED_PROVISION_FILE_PATH"

        security import "$DECRYPTED_CERT_FILE_PATH" -k "$KEYCHAIN" -P "$CERT_EXPORT_KEY" -A
        security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN"

        mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
        echo `ls .github/secrets/*.mobileprovision`
          for PROVISION in `ls .github/secrets/*.mobileprovision`
          do
            UUID=`/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< $(security cms -D -i ./$PROVISION)`
          cp "./$PROVISION" "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision"
        done
        
    - name: CocoaPods Install
      run: pod install
        
    - name: Archive app
      run: |
        xcodebuild clean archive -workspace $XC_WORKSPACE -scheme $XC_SCHEME -configuration release -archivePath $XC_ARCHIVE
        
    - name: Export app
      run: |
        xcodebuild -exportArchive -archivePath $XC_ARCHIVE -exportOptionsPlist ExportOptions.plist -exportPath . -allowProvisioningUpdates

    - name: Install private API key P8
      env:
        PRIVATE_API_KEY_BASE64: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        API_KEY: ${{ secrets.APPSTORE_API_KEY_ID }}
      run: |
        mkdir -p ~/private_keys
        echo -n "$PRIVATE_API_KEY_BASE64" | base64 --decode --output ~/private_keys/AuthKey_$API_KEY.p8

    - name: Upload app to TestFlight
      env:
        API_KEY: ${{ secrets.APPSTORE_API_KEY_ID }}
        API_ISSUER : ${{ secrets.APPSTORE_ISSUER_ID  }}
      ddsrun: xcrun altool --output-format xml --upload-app -f TiquiTaca_iOS.ipa -t ios --apiKey $API_KEY --apiIssuer $API_ISSUER
